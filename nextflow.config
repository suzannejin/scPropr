/*
 * -------------------------------------------------
 *  nf-proportionality Nextflow config file
 * -------------------------------------------------
 * Default config options for all environments.
 */

// Global default params, used in configs
params {

  /*
   * Input data
   * it show follow a path structure like this:  /path/to/mouseStemCells/mouseStemCells_experimental_absolute.csv.gz
   */
  input_count_file            = "${launchDir}/run_data/{mouseStemCells,humanFibroblast}/*_absolute.csv.gz"
  input_features_file         = "${launchDir}/run_data/{mouseStemCells,humanFibroblast}/*_features.csv"   // features (genes) name 
  input_barcodes_file         = "${launchDir}/run_data/{mouseStemCells,humanFibroblast}/*_barcodes.csv"   // barcodes or cell id

  /* output folder */
  outdir                      = "${launchDir}/results"
  tracedir                    = "${params.outdir}/pipeline_info"

  /* 
   * Select data
   * Select genes or select cells 
   */
  // use the genes specified by these positions only - for the analysis
  select_genes_pos            = "${launchDir}/run_data/{mouseStemCells,humanFibroblast}/*_features_pos.csv"
  do_select_genes             = false   
  // use the cells specified by these positions only - for the analysis
  select_cells_pos            = "${launchDir}/run_data/{mouseStemCells,humanFibroblast}/*_barcodes_pos.csv"
  do_select_cells             = false

  /* simulations */
  simulation_size_factors     = [1,2,5]
  simulation_slope            = [2,3,4]
  simulate_ndata              = [2,3]
  do_model                    = false
  do_simulate                 = false
  // use the genes specified by these positions only - for the simulation
  select_genes_pos_simulation = "${launchDir}/run_data/{mouseStemCells,humanFibroblast}/*_features_pos_sim.csv"
  do_select_genes_simulation  = false   
  // use the cells specified by these positions only - for the simulation
  select_cells_pos_simulation = "${launchDir}/run_data/{mouseStemCells,humanFibroblast}/*_barcodes_pos_sim.csv"
  do_select_cells_imulation   = false

  /* transform or normalize data */
  methods_replace_zero        = "zcompositions" // "zcompositions,pseudocount,one,min,none" 
  methods_transform_data      = "log2,tmm,scran,clr,alr"     // log2,clr,alr,tmm,scran
  alr_ref_genes               = [1436] //[1436] // ,68,39, 13,43,59]   // three random genes obtained from 'set.seed(0); sample(1:104, 5)'    NOTE: nozero genes only
                                     // and the three genes with highest variance

  /* correlation */
  methods_correlation         = "rho,cor,vlr,pcor,pcor.shrink"
  do_fdr                      = false   // TODO add a step to calculate FDR

  /* 
   * plot configurations
   * everything will be computed, 
   * but one can specify the methods to be shown in an additional _show.png figure
   */
  show_methods_replace_zero   = "zcompositions"
  show_methods_transf_data    = "log2,tmm,scran,clr,alr"
  show_methods_corr           = "cor,rho,pcor.shrink"
  show_alr                    = 1436

  // other general options
  publish_dir_mode            = 'copy'
  check_out                   = true

  // script folder
  bin                         = "${launchDir}/bin"

  // Defaults only, expecting to be overwritten
  max_memory                  = 84.GB
  max_cpus                    = 16
  max_time                    = 240.h

}

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

profiles {
  debug { process.beforeScript = 'echo $HOSTNAME' }
  docker {
    docker.enabled            = true
    singularity.enabled       = false
    podman.enabled            = false
    shifter.enabled           = false
    charliecloud.enabled      = false
    // Avoid this error:
    //   WARNING: Your kernel does not support swap limit capabilities or the cgroup is not mounted. Memory limited without swap.
    // Testing this in nf-core after discussion here https://github.com/nf-core/tools/pull/351
    // once this is established and works well, nextflow might implement this behavior as new default.
    docker.runOptions = '-u \$(id -u):\$(id -g)'
  }
  singularity {
    singularity.enabled       = true
    singularity.autoMounts    = true
    docker.enabled            = false
    podman.enabled            = false
    shifter.enabled           = false
    charliecloud.enabled      = false
  }
  test  { includeConfig 'conf/test.config' }
  crg   { includeConfig 'conf/crg.config' }
  trace { includeConfig 'conf/trace.config' }
}

// Export these variables to prevent local Python/R libraries from conflicting with those in the container
env {
  PYTHONNOUSERSITE = 1
  R_PROFILE_USER   = "/.Rprofile"
  R_ENVIRON_USER   = "/.Renviron"
}

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

// about this pipeline
manifest {
  name            = 'suzannejin/scPropr'
  author          = 'Suzanne Jin'
  homePage        = 'https://github.com/suzannejin/scpropr'
  description     = 'Compositional analysis on single cell data'
  mainScript      = 'main.nf'
  nextflowVersion = '!>=20.11.0'
  version         = '1.0'
}

// Function to ensure that resource requirements don't go beyond
// a maximum limit
def check_max(obj, type) {
  if (type == 'memory') {
    try {
      if (obj.compareTo(params.max_memory as nextflow.util.MemoryUnit) == 1)
        return params.max_memory as nextflow.util.MemoryUnit
      else
        return obj
    } catch (all) {
      println "   ### ERROR ###   Max memory '${params.max_memory}' is not valid! Using default value: $obj"
      return obj
    }
  } else if (type == 'time') {
    try {
      if (obj.compareTo(params.max_time as nextflow.util.Duration) == 1)
        return params.max_time as nextflow.util.Duration
      else
        return obj
    } catch (all) {
      println "   ### ERROR ###   Max time '${params.max_time}' is not valid! Using default value: $obj"
      return obj
    }
  } else if (type == 'cpus') {
    try {
      return Math.min( obj, params.max_cpus as int )
    } catch (all) {
      println "   ### ERROR ###   Max cpus '${params.max_cpus}' is not valid! Using default value: $obj"
      return obj
    }
  }
}
