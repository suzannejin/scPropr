/*
 * -------------------------------------------------
 *  Nextflow config file for running tests
 * -------------------------------------------------
 * Defines bundled input files and everything required
 * to run a fast and simple test. Use as follows:
 *   nextflow run proportionality.nf -profile test,<docker/singularity>
 */

params {

  /*
   * Input data
   * it show follow a path structure like this:  /path/to/mouseStemCells/mouseStemCells_experimental_absolute.csv.gz
   */
  datadir                                  = "/users/cn/sjin/projects/proportionality/run_scPropr"
  input_count_file                         = "${datadir}/data/mouseStemCells/mouseStemCells_{experimental,phaseS}_full_absolute.csv.gz"
  input_features_file                      = "${datadir}/data/mouseStemCells/mouseStemCells_{experimental,phaseS}_full_features.csv"   // features (genes) name 
  input_barcodes_file                      = "${datadir}/data/mouseStemCells/mouseStemCells_{experimental,phaseS}_full_barcodes.csv"   // barcodes or cell id

  /* output folder */
  outdir                                   = "${baseDir}/test"
  tracedir                                 = "${params.outdir}/pipeline_info"
  publish_dir_mode                         = 'copy'

  /* also perform analysis on non-zero genes only (non zero for main experimental data) */
  do_nozero_genes                          = false

  /* simulations */
  simulation_slope                         = [2,4]
  simulation_ndata                         = [5]
  simulation_size_factor                   = [1]
  simulation_cell_factor                   = [1]
  do_simulation                            = true
  do_simulation_byslope                    = false
  do_simulation_bydepth                    = false
  do_simulation_bystep                     = false
  do_simulation_type                       = ['phaseS'] // 'phaseS+rel'  // the type of data that will be used as scDesign modeling step input

  /* compute plots */
  random_seed                              = 0
  do_plot_data_exploration                 = false
  do_plot_original_vs_transf               = false
  do_plot_log_vs_transf                    = false
  do_plot_abs_vs_rel_transf                = false
  do_plot_log2abs_vs_rel_transf            = false
  do_plot_abs_vs_rel_cor                   = false
  do_plot_log2abs_vs_rel_cor               = false
  do_plot_log2abs_vs_rel_cor_colored       = true
  do_plot_log2abs_vs_rel_cor_colored_indiv = true
  do_evaluate_log2abs_vs_rel_cor           = true
  do_evaluate_log2abs_vs_rel_cor_filter    = true

  /* data processing */
  method_replace_zero                      = "zcompositions" // "zcompositions,pseudocount,one,min,none" 
  method_transform_data                    = "log2,clr" // ,tmmcpm,alr2"     // log2,clr,alr,tmm,scran
  refgenes                                 = ['EIF4A1','UBE2C','HIST1H1B']  //'LACTB2',
  // refgenes                                 = ['EIF4A1','RPL8','MT-RNR2']
  refgenes_nozero                          = ['EIF4A1','RPL8','MT-RNR2']

  /* correlation */
  method_correlation                       = "cor,pcor.shrink"  // TODO store lambda information
  do_fdr                                   = false   // TODO add a step to calculate FDR
  method_evaluation                        = "rho"
  scatter_colorby                          = ['dropout']
  scatter_filter                           = [0.2]

  /* only test */
  do_test                                  = false
}